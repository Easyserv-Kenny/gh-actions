on:
  workflow_dispatch:
    inputs:
      build:
        description: 'Build version'
        required: true
      environment:
        description: 'Target environment'
        type: environment
        default: unstable
        required: true

run-name: Deploy ${{ github.event.inputs.environment }} -> ${{ github.event.inputs.build }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      deployments: write
      
    steps:
      # Download artifact from a different workflow
      - name: Download artifact
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: ci.yml
          workflow_conclusion: success
          name: ${{ github.event.inputs.build }}
          search_artifacts: true
          skip_unpack: false
          if_no_artifact_found: fail
      
      - name: Read version.json
        run: echo "PACKAGE_JSON=$(jq -c . < version.json)" >> $GITHUB_ENV

      - name: Create deployment
        id: create_deployment
        uses: chrnorm/deployment-action@v2
        with:
          ref: ${{ fromJson(env.PACKAGE_JSON).sha1 }}
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: ${{ github.event.inputs.environment }}

      - name: Deploy
        run: echo Deploy deploy

      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@v2
        with:
          token: ${{ github.token }}
          deployment-id: ${{ steps.create_deployment.outputs.deployment_id }}
          state: 'success'

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@v2
        with:
          token: ${{ github.token }}
          deployment-id: ${{ steps.create_deployment.outputs.deployment_id }}
          state: 'failure'
      

          
